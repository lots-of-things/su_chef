<launch>
  <arg name="video_device" default="/dev/video2" />
  <arg name="tracked_object" default="apple" />

  <!-- object detection module -->
  <node name="object_detection" pkg="ros_braccio_opencv_obj_detect_grab" type="object_detection_opencv.py" clear_params="true">
    <param name="input_image_compressed" value="/pi3a/image/compressed" />
    <param name="model_path_prefix" value="$(find ros_braccio_opencv_obj_detect_grab)/models/yolov3"/>
    <param name="tracked_object" value="apple"/>
    <param name="threshold" value="0.3"/>
    <param name="rotation_angle" value="-90.0"/>
  </node>

  <!-- USB web cam driver -->
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" clear_params="true">
    <param name="video_device" value="$(arg video_device)" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="framerate" value="10" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
    <remap from="/usb_cam/image_raw/compressed" to="/pi3a/image/compressed" />
    <remap from="/usb_cam/camera_info" to="/pi3a/camera_info" />
  </node>

  <node name="detection_image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/face_image"/>
    <param name="image_transport" value="compressed" />
    <param name="autosize" value="true" />
  </node>

</launch>
